package {{.Package}}_test

import (
	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"

  {{range .DefaultImports}}{{printf "%q" .}}
  {{end}}
  {{range $key, $value := .Imports}}{{$key}} {{ printf "%q" $value}}
  {{end}}
)

var _ = Describe("#{{.OperationID}}", func() {
	var (
		{{.OperationID}}Data   string
		{{.OperationID}}Result bool
		{{.OperationID}}Err    error
	)

	Context("when {{.OperationID}} succeed", func() {
		BeforeEach(func() {
			{{.OperationID}}Data = "{{.OperationID}} data"
			{{.OperationID}}Err = nil
			{{.OperationID}}Result = true
		})

		It("{{.OperationID}} with {{.OperationID}}Data and gets it back", func() {
			//Do {{.OperationID}}
			Expect({{.OperationID}}Err).ToNot(HaveOccurred())
			Expect({{.OperationID}}Result).To(BeTrue())
			Expect({{.OperationID}}Data).To(Equal("{{.OperationID}} data"))
		})
	})

	Context("when {{.OperationID}} fail", func() {
		BeforeEach(func() {
			{{.OperationID}}Err = nil
			{{.OperationID}}Result = false
		})

		It("fails to execute {{.OperationID}} with {{.OperationID}}Data", func() {
			//Do {{.OperationID}}
			Expect({{.OperationID}}Err).ToNot(HaveOccurred())
			Expect({{.OperationID}}Result).To(BeFalse())
		})
	})
})
